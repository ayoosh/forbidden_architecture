
# Set Stack Pointer ;
LLW R1 0x4261 ;
LHW R1 0x4E6B ;

# Infinitely send STACK POINTER value to DDR and READ BACK
# R2 - DDR Address1, Keep incrementing the address by 8
# R3 - Different Data written in memory 
# R4 - Address Increment by 8
# R5 - 
# R6 - 
LLW R2 0x0008 ;
LHW R2 0x0000 ;
LLW R4 0x0000 ;
LHW R4 0x0088 ;
LLW R3 0x4241 ;
LHW R3 0x4443 ;

# SPART Registers

LLW R6 0x0000 ;
LHW R6 0x0800 ;
LLW R7 0x0001 ;
LHW R7 0x0800 ;
LLW R8 0x0002 ;
LLW R9 0x0001 ;

# STORE

STORE R1 R2 ;
ADD R2 R2 R4 ;
STORE R3 R2 ;
ADD R2 R2 R4 ;
STORE R1 R2 ;
ADD R2 R2 R4 ;
STORE R3 R2 ;

SUB R2 R2 R4 ;
SUB R2 R2 R4 ;
SUB R2 R2 R4 ;

LOAD R3 R2 ;
# Send data to SPART
SPART_TX_NOT_READY_1 LOAD R11 R7 0x00 ;
AND R0 R11 R9 ;
B EQ SPART_TX_NOT_READY_1 ;

STORE R3 R6 ;




ADD R2 R2 R4 ;
LOAD R1 R2 ;
# Send data to SPART
SPART_TX_NOT_READY_2 LOAD R11 R7 0x00 ;
AND R0 R11 R9 ;
B EQ SPART_TX_NOT_READY_2 ;

STORE R1 R6 ;


ADD R2 R2 R4 ;
LOAD R3 R2 ;
# Send data to SPART
SPART_TX_NOT_READY_3 LOAD R11 R7 0x00 ;
AND R0 R11 R9 ;
B EQ SPART_TX_NOT_READY_3 ;

STORE R3 R6 ;



ADD R2 R2 R4 ;
LOAD R1 R2 ;
# Send data to SPART
SPART_TX_NOT_READY_4 LOAD R11 R7 0x00 ;
AND R0 R11 R9 ;
B EQ SPART_TX_NOT_READY_4 ;

STORE R1 R6 ;
B UNCOND SPART_TX_NOT_READY_1 ;